<?xml version="1.0" encoding="UTF-8"?>
<library xmlns="urn:hl7-org:elm:r1" xmlns:t="urn:hl7-org:elm-types:r1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:fhir="http://hl7.org/fhir" xmlns:a="urn:hl7-org:cql-annotations:r1">
    <identifier id="ElmTests" version="1.0"/>
    <schemaIdentifier id="urn:hl7-org:elm" version="r1"/>
    <usings>
        <def localIdentifier="System" uri="urn:hl7-org:elm-types:r1"/>
        <def localIdentifier="FHIR" uri="http://hl7.org/fhir" version="3.0.0"/>
    </usings>
    <statements>
        <def name="Patient" context="Patient">
            <expression xsi:type="SingletonFrom">
                <operand dataType="fhir:Patient" xsi:type="Retrieve"/>
            </expression>
        </def>
        <def localId="11" name="List1" context="Patient" accessLevel="Public">
            <expression localId="10" xsi:type="List">
                <element localId="3" xsi:type="Tuple">
                    <element name="X">
                        <value localId="2" valueType="t:Integer" value="1" xsi:type="Literal"/>
                    </element>
                </element>
                <element localId="5" xsi:type="Tuple">
                    <element name="X">
                        <value localId="4" valueType="t:Integer" value="2" xsi:type="Literal"/>
                    </element>
                </element>
                <element localId="7" xsi:type="Tuple">
                    <element name="X">
                        <value localId="6" valueType="t:Integer" value="3" xsi:type="Literal"/>
                    </element>
                </element>
                <element localId="9" xsi:type="Tuple">
                    <element name="X">
                        <value localId="8" valueType="t:Integer" value="1" xsi:type="Literal"/>
                    </element>
                </element>
            </expression>
        </def>
        <def localId="12" name="TestFilter" context="Patient" accessLevel="Public">
            <expression xsi:type="Filter" scope="X">
                <source xsi:type="ExpressionRef" name="List1"/>
                <condition xsi:type="Equal">
                    <operand xsi:type="Property" scope="X" path="X"/>
                    <operand xsi:type="Literal" valueType="t:Integer" value="1"/>
                </condition>
            </expression>
        </def>
    </statements>
</library>

