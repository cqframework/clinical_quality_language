apply plugin: 'java'
apply plugin: 'idea'
apply plugin:'application'
apply plugin: 'maven'
apply plugin: 'eclipse'

group = 'org.cqframework'
version = '0.1'
sourceCompatibility = '1.7'

mainClassName = 'org.cqframework.cql.Main'
run.args = ["${projectDir}/../../../Examples/ChlamydiaScreening_CQM.cql"]

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'org.antlr', name: 'antlr4', version: '4.3'
    testCompile group: 'org.testng', name: 'testng', version: '6.8.8'
}

test {
    useTestNG()
}

ext.antlr = [
    package: 'org.cqframework.cql.gen',
    srcDir:  '../../grammar',
    destDir: 'src/generated/java'
]

// Loosely based on https://github.com/ae6rt/gradle-antlr4-template
task antlrTool(type: JavaExec) {
    description = 'Generates Java sources from ANTLR4 grammars.'

    mkdir(antlr.destDir)
    inputs.dir file(antlr.srcDir)
    outputs.dir file(antlr.destDir)

    def grammars = fileTree(antlr.srcDir).include('**/*.g4')

    main = 'org.antlr.v4.Tool'
    classpath = configurations.compile
    def pkg = antlr.package.replaceAll("\\.", "/")
    args = ["-o", "${antlr.destDir}/${pkg}", "-visitor", "-package", antlr.package, grammars.files].flatten()
}

compileJava.dependsOn antlrTool
sourceSets.main.java.srcDirs += antlr.destDir

clean {
    delete antlr.destDir
}
